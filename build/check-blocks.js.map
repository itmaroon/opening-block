{"version":3,"file":"check-blocks.js","mappings":";;;;;AAAA,MAAM;EAAEA,MAAM;EAAEC,SAAS;EAAEC;AAAS,CAAC,GAAGC,EAAE,CAACC,IAAI;;AAE/C;AACA,IAAIC,cAAc,GAAGL,MAAM,CAAC,mBAAmB,CAAC,CAACM,SAAS,CAAC,CAAC;AAC5D,IAAIC,aAAa,GAAG,KAAK,CAAC,CAAE;;AAE5BN,SAAS,CAAC,MAAM;EACd;EACA,MAAMO,iBAAiB,GAAGR,MAAM,CAAC,mBAAmB,CAAC,CAACM,SAAS,CAAC,CAAC;EAEjE,IAAIE,iBAAiB,CAACC,MAAM,GAAGJ,cAAc,CAACI,MAAM,EAAE;IACpD;IACA,MAAMC,cAAc,GAAG,CAAC,kBAAkB,EAAE,gBAAgB,EAAE,eAAe,CAAC;IAC9E,MAAMC,sBAAsB,GAAGN,cAAc,CAACO,IAAI,CAACC,KAAK,IAAIH,cAAc,CAACI,QAAQ,CAACD,KAAK,CAACE,IAAI,CAAC,CAAC;IAChG;IACA,MAAMC,QAAQ,GAAGR,iBAAiB,CAACS,IAAI,CACrCJ,KAAK,IAAI,CAACR,cAAc,CAACO,IAAI,CAACM,aAAa,IAAIA,aAAa,CAACC,QAAQ,KAAKN,KAAK,CAACM,QAAQ,CAC1F,CAAC;IACD,MAAMC,kBAAkB,GAAGV,cAAc,CAACI,QAAQ,CAACE,QAAQ,CAACD,IAAI,CAAC;IACjE;IACA,IAAIJ,sBAAsB,IAAIS,kBAAkB,EAAE;MAChD;MACA,IAAI,CAACb,aAAa,EAAE;QAClBA,aAAa,GAAG,IAAI;QACpBL,QAAQ,CAAC,cAAc,CAAC,CAACmB,YAAY,CACnC,OAAO,EACP,yBAAyB,EACzB;UAAEC,IAAI,EAAE;QAAW,CACrB,CAAC;MACH;MACAf,aAAa,GAAG,KAAK;MACrB;MACAL,QAAQ,CAAC,mBAAmB,CAAC,CAACqB,WAAW,CAACP,QAAQ,CAACG,QAAQ,EAAE,KAAK,CAAC;IAErE;EACF;EACA;EACAd,cAAc,GAAGG,iBAAiB;AACpC,CAAC,CAAC,C","sources":["webpack://opening-block/./src/check-blocks.js"],"sourcesContent":["const { select, subscribe, dispatch } = wp.data;\r\n\r\n//初めのブロックの状態を取得\r\nlet blocksInEditor = select('core/block-editor').getBlocks();\r\nlet noticeCreated = false;  //エラーメッセージ表示フラグ\r\n\r\nsubscribe(() => {\r\n  //状態変更時のブロックの状態を取得\r\n  const newBlocksInEditor = select('core/block-editor').getBlocks();\r\n\r\n  if (newBlocksInEditor.length > blocksInEditor.length) {\r\n    //オープニングブロックがあるかの検証\r\n    const disabledBlocks = ['itmar/logo-anime', 'itmar/tea-time', 'itmar/welcome'];\r\n    const isDisabledBlockPresent = blocksInEditor.some(block => disabledBlocks.includes(block.name));\r\n    // 追加しようとするブロックの取得\r\n    const newBlock = newBlocksInEditor.find(\r\n      block => !blocksInEditor.some(existingBlock => existingBlock.clientId === block.clientId)\r\n    );\r\n    const isNewBlockDisabled = disabledBlocks.includes(newBlock.name)\r\n    //オープニングブロックがあり追加しようとするブロックもオープニングブロックの場合\r\n    if (isDisabledBlockPresent && isNewBlockDisabled) {\r\n      //noticeCreatedがfalseならエラー通知\r\n      if (!noticeCreated) {\r\n        noticeCreated = true;\r\n        dispatch('core/notices').createNotice(\r\n          'error',\r\n          'オープニングブロックは一つしか配置できません。',\r\n          { type: 'snackbar' }\r\n        );\r\n      }\r\n      noticeCreated = false;\r\n      // 追加されたブロックを削除する\r\n      dispatch('core/block-editor').removeBlock(newBlock.clientId, false);\r\n\r\n    }\r\n  }\r\n  // ブロックリストを更新する\r\n  blocksInEditor = newBlocksInEditor;\r\n});\r\n"],"names":["select","subscribe","dispatch","wp","data","blocksInEditor","getBlocks","noticeCreated","newBlocksInEditor","length","disabledBlocks","isDisabledBlockPresent","some","block","includes","name","newBlock","find","existingBlock","clientId","isNewBlockDisabled","createNotice","type","removeBlock"],"sourceRoot":""}